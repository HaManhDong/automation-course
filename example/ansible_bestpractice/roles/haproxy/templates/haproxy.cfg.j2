global
<<<<<<< HEAD
    log         127.0.0.1 local2 

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        root
    group       root
    daemon

=======
    log         127.0.0.1 local2
    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon
    stats socket /var/lib/haproxy/stats
>>>>>>> da7b3452d733d433b94d7a971d0dadbf6d68a7d3
defaults
    mode                    {{ mode }}
    log                     global
    option                  httplog
    option                  dontlognull
<<<<<<< HEAD
    option                  http-server-close
=======
    option http-server-close
>>>>>>> da7b3452d733d433b94d7a971d0dadbf6d68a7d3
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

<<<<<<< HEAD
frontend http-in
    bind *:{{ listenport }}
    reqadd X-Forwarded-Proto:\ http
    default_backend app

backend app
    balance     {{ balance }}

{% for backend in haproxy_backend_servers %}
    server {{ backend.name }} {{ backend.address }}:{{ backend.port }} check
{% endfor %}
=======
listen stats
    bind :8080
    mode http
    stats enable
    stats uri /stats
    stats realm HAProxy\ Statistics

listen webserver
    bind :{{ app_port }}
    balance  {{ balance }}
    mode  http
    option  forwardfor
{% for host in groups['webserver'] %}
    server {{ hostvars[host]['ansible_hostname'] }} {{ hostvars[host]['ansible_eth0']['ipv4']['address'] }}:{{ app_port }} check
{% endfor %}
>>>>>>> da7b3452d733d433b94d7a971d0dadbf6d68a7d3
